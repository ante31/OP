#include <bits/stdc++.h>
#include <iostream>
using namespace std;

struct recktangle
{
    int x1;
    int x2;
    int y1;
    int y2;
};

struct circle
{
    int x;
    int y;
    int r;
};

int funk(recktangle *list_of_recktangles, circle &kr)
{
    float distance1, distance2, distance3, distance4;
    int intersections=0;

    for(int i=0; i<1; i++)
    {

        distance1 = sqrt(fabsf(pow(list_of_recktangles[i].x1-kr.x, 2) + pow(list_of_recktangles[i].y1-kr.y, 2)));
        distance2 = sqrt(fabsf(pow(list_of_recktangles[i].x2-kr.x, 2) + pow(list_of_recktangles[i].y2-kr.y, 2)));
        
        distance3 = sqrt(fabsf(pow(list_of_recktangles[i].x2-kr.x, 2) + pow(list_of_recktangles[i].y1-kr.y, 2)));
        distance4 = sqrt(fabsf(pow(list_of_recktangles[i].x1-kr.x, 2) + pow(list_of_recktangles[i].y2-kr.y, 2)));
        
        
        if(((min(distance1, distance2) <= kr.r )&&(max(distance1, distance2) >= kr.r)) || ((min(distance3, distance4) <= kr.r )&&(max(distance3, distance4) >= kr.r)))
            intersections++;
        
        
    }
    return intersections;
}

int main()
{
    //Alociranje recktanglea
    recktangle* list_of_recktangles = new recktangle[3];

    //Deklariranje kruznice
    circle kr;
int i=1;
    //Popunjavanje recktanglea
    for(int i=0; i<1; i++)
    {
        cout<<i<<". X1:";
        cin>>list_of_recktangles[i].x1;
        cout<<i<<". Y1:";
        cin>>list_of_recktangles[i].y1;

        cout<<i<<". X2:";
        cin>>list_of_recktangles[i].x2;
        cout<<i<<". Y2:";
        cin>>list_of_recktangles[i].y2;
    }
    //Popunjavanje kruznice

    cout<<"X:";
    cin>>kr.x;
    cout<<"Y:";
    cin>>kr.y;
    cout<<"r:";
    cin>>kr.r;





    cout<<funk(list_of_recktangles, kr);
}
